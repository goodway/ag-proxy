#!/bin/bash

echo -e "\033[36m###########################"
echo -e "\033[36m#                         #"
echo -e "\033[36m#     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó     #"
echo -e "\033[36m#    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù     #"
echo -e "\033[36m#    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ñà‚ïó    #"
echo -e "\033[36m#    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë    #"
echo -e "\033[36m#    ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù    #"
echo -e "\033[36m#    ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù     #"
echo -e "\033[36m#                         #"
echo -e "\033[36m###########################"
echo -e "\033[36m"
echo -e "\033[36m  üåê AG Nginx Proxy Generator"
echo -e "\033[36m  –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø—Ä–æ–∫—Å–∏-–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –¥–ª—è Nginx"
echo -e "\033[36m  –í–µ—Ä—Å–∏—è 1.0"
echo
read -p $'\033[36m  –ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É... \033[0m'


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –≤ /etc/security/limits.conf
setup_limits() {
    local CONFIG_FILE="/etc/security/limits.conf"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    if [[ ! -f "$CONFIG_FILE" ]]; then
        echo "–û—à–∏–±–∫–∞: –§–∞–π–ª $CONFIG_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ (–Ω—É–∂–Ω—ã root)
    if [[ $EUID -ne 0 ]]; then
        echo "–û—à–∏–±–∫–∞: –°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω —Å –ø—Ä–∞–≤–∞–º–∏ root"
        return 1
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ —É–∂–µ –Ω—É–∂–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
    local CHECK_NPROC_SOFT=$(grep -E "^soft\s+nproc\s+65536" "$CONFIG_FILE" | wc -l)
    local CHECK_NPROC_HARD=$(grep -E "^hard\s+nproc\s+65536" "$CONFIG_FILE" | wc -l)
    local CHECK_NOFILE_SOFT=$(grep -E "^soft\s+nofile\s+65536" "$CONFIG_FILE" | wc -l)
    local CHECK_NOFILE_HARD=$(grep -E "^hard\s+nofile\s+65536" "$CONFIG_FILE" | wc -l)

    # –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    if [[ $CHECK_NPROC_SOFT -gt 0 && $CHECK_NPROC_HARD -gt 0 && $CHECK_NOFILE_SOFT -gt 0 && $CHECK_NOFILE_HARD -gt 0 ]]; then
        echo "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —É–∂–µ –∑–∞–¥–∞–Ω—ã –≤ —Ñ–∞–π–ª–µ $CONFIG_FILE"
        return 0
    fi

    # –ï—Å–ª–∏ –Ω–µ –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö
    echo "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –≤ —Ñ–∞–π–ª $CONFIG_FILE..."

    # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
    if ! grep -q "^* soft nofile 65536" "$CONFIG_FILE"; then
        echo "* soft nofile 65536" >> "$CONFIG_FILE"
    fi

    if ! grep -q "^* hard nofile 65536" "$CONFIG_FILE"; then
        echo "* hard nofile 65536" >> "$CONFIG_FILE"
    fi

    if ! grep -q "^* soft nproc 65536" "$CONFIG_FILE"; then
        echo "* soft nproc 65536" >> "$CONFIG_FILE"
    fi

    if ! grep -q "^* hard nproc 65536" "$CONFIG_FILE"; then
        echo "* hard nproc 65536" >> "$CONFIG_FILE"
    fi

    echo "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ñ–∞–π–ª $CONFIG_FILE"
    echo "–î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –∏–ª–∏ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É –∑–∞–Ω–æ–≤–æ"
    return 0
}

replace_nginx_config() {
    echo "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞..."
    cp "$NGINX_CONF" "${NGINX_CONF}.backup"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å–ø–µ—à–Ω–æ –ª–∏ —Å–æ–∑–¥–∞–ª–∞—Å—å —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è
    if [[ $? -ne 0 ]]; then
        echo "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏!"
        return 1
    fi
    
    echo "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: ${NGINX_CONF}.backup"
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ñ–∏–≥ —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º –∏–∑ –≤–∞—à–µ–≥–æ —Ç–µ–∫—Å—Ç–∞
    cat > "$NGINX_CONF" << 'EOF'
user www-data;
worker_processes auto;
worker_rlimit_nofile 64000;

pid /run/nginx.pid;
error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections  8192;
    accept_mutex on;
    multi_accept on;
    use epoll;
}

http {

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout  30;
    keepalive_requests 256;
    types_hash_max_size 2048;
    client_body_timeout 10;
    send_timeout 5;

    server_names_hash_bucket_size 128;

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 2;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
        gzip_types 
        text/plain
        text/css
        application/json
        application/javascript
        text/xml
        application/xml
        application/xml+rss
        text/javascript
        font/eot
        font/otf
        font/ttf
        image/svg+xml;
    gzip_min_length 500;


    ##
    # SSL Settings
    ##

    ssl_session_cache   shared:SSL:10m; # ssl_session cache 10mb ~ 40000 sessions
    ssl_session_timeout 30m; # ssl_session timeout

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;


    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}
EOF
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å–ø–µ—à–Ω–æ –ª–∏ –∑–∞–ø–∏—Å–∞–Ω –Ω–æ–≤—ã–π –∫–æ–Ω—Ñ–∏–≥
    if [[ $? -eq 0 ]]; then
        echo "–ù–æ–≤—ã–π –∫–æ–Ω—Ñ–∏–≥ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω –≤ $NGINX_CONF"
        return 0
    else
        echo "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞!"
        return 1
    fi
}

NGINX_CONF="/etc/nginx/nginx.conf"

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —É—Ç–∏–ª–∏—Ç
apt update
apt install -y sudo
#sudo apt upgrade -y

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
sudo apt install -y curl gnupg2 ca-certificates lsb-release

read -p $'\033[36m –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å firewall (ufw) —Å –Ω—É–∂–Ω—ã–º–∏ –ø–æ—Ä—Ç–∞–º–∏? (y/n): \033[0m' -n 1 -r
echo

if [[ $REPLY =~ ^[Yy]$ ]]; then
   # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ ufw –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤–∏–ª –¥–ª—è SSH, HTTP –∏ HTTPS
   sudo apt install ufw -y
   sudo ufw allow 'OpenSSH'
   sudo ufw allow 'Nginx Full'
   sudo ufw enable
   echo -e "\033[36m Firewall –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω, –ø–æ—Ä—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã \033[0m"
fi

read -p $'\033[36m –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Nginx –≤–µ–±-—Å–µ—Ä–≤–µ—Ä? (y/n): \033[0m' -n 1 -r
echo

if [[ $REPLY =~ ^[Yy]$ ]]; then
   # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ nginx
   sudo apt install nginx -y

   # –í–∫–ª—é—á–µ–Ω–∏–µ nginx
   sudo systemctl enable nginx
   sudo systemctl start nginx
   echo -e "\033[36m Nginx —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω \033[0m"
fi


read -p $'\033[36m –ó–∞–º–µ–Ω–∏—Ç—å –≤–∞—à —Ç–µ–∫—É—â–∏–π nginx.conf –Ω–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –ø–æ–¥ –ø—Ä–æ–∫—Å–∏ –≤–µ—Ä—Å–∏—é? (y/n): \033[0m' -n 1 -r
echo

if [[ $REPLY =~ ^[Yy]$ ]]; then
   replace_nginx_config
fi


SETUP_LIMITS=0

read -p $'\033[36m  –£–±—Ä–∞—Ç—å soft –∏ hard –ª–∏–º–∏—Ç—ã –ø–æ —Ä–µ—Å—É—Ä—Å–∞–º ? (–¥–ª—è —Å—Ä–µ–¥–Ω–µ –∏ –≤—ã—Å–æ–∫–æ–ø–æ—Å–µ—â–∞–µ–º—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤) (y/n): ' -n 1 -r
echo

if [[ $REPLY =~ ^[Yy]$ ]]; then
   setup_limits
   SETUP_LIMITS=1
fi

if [ "$SETUP_LIMITS" == 1 ]; then
    read -p $'\033[36m  –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏—Å—Ç–µ–º—É (y/n): ' -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        reboot
    fi
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ certbot –∏ python3-certbot-nginx
sudo apt install certbot python3-certbot-nginx -y

filename="api_balancer"
upstream_name="api_olimp"
server_name="api.test.com"
server="prod.domain:443"
type="web"

# –ó–∞–ø—Ä–æ—Å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
read -p $'\033[36m –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ (–±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è): \033[0m' filename
read -p $'\033[36m –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ upstream: \033[0m' upstream_name
read -p $'\033[36m –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–∫—Å–∏-–¥–æ–º–µ–Ω: \033[0m' server_name
read -p $'\033[36m –í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω/IP –∏ –ø–æ—Ä—Ç –∫–æ–Ω–µ—á–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è upstream (–Ω–∞–ø—Ä–∏–º–µ—Ä, final.host:443): \033[0m' server
read -p $'\033[36m –í–≤–µ–¥–∏—Ç–µ —Ç–∏–ø –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (web –∏–ª–∏ octane): \033[0m' type

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –±–ª–æ–∫–∞ map $http_upgrade $type
if [ "$type" == "web" ]; then
    default_value="web"
elif [ "$type" == "octane" ]; then
    default_value="octane"
else
    echo -e "\033[31m –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø. –í—ã–±–µ—Ä–∏—Ç–µ 'web' –∏–ª–∏ 'octane'. \033[0m"
    exit 1
fi

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π —Ñ–∞–π–ª–æ–≤ –ª–æ–≥–æ–≤ —Å —É—á–µ—Ç–æ–º –Ω–∞–∑–≤–∞–Ω–∏—è upstream
access_log="var/log/nginx/${upstream_name}.access.log"
error_log="var/log/nginx/${upstream_name}.error.log"
octane_proxy="${upstream_name}\$suffix"


# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ nginx
cat <<EOF > "$filename.conf"
map \$http_upgrade \$type {
  default "$default_value";
  websocket "ws";
}

map \$http_upgrade2 \$connection_upgrade {
    default upgrade;
    ''      close;
}

upstream $upstream_name {
    least_conn;
    zone $upstream_name 64k;

    server $server; # max_fails=1 fail_timeout=3s; // we will use this attr-s for multiple servers configuration

    keepalive 5;
}

server {
    server_name $server_name;

    access_log off;
    #access_log  /$access_log main;
    error_log  /$error_log error;

    location / {
        try_files /nonexistent @\$type;
    }

    # @ws –¥–ª—è WebSocket
    location @ws {
        proxy_pass https://$upstream_name;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_read_timeout     60;
        proxy_connect_timeout  60;
        proxy_redirect         off;

        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass \$http_upgrade;
    }

EOF

if [ "$type" == "web" ]; then
cat <<EOF >> "$filename.conf"
    location @web {
        proxy_pass https://$upstream_name;
        proxy_set_header HOST \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_cache_bypass \$http_upgrade;
        proxy_redirect off;

        proxy_next_upstream error timeout http_500;
    }
EOF
else
cat <<EOF >> "$filename.conf"
    location @octane {
        set \$suffix "";
 
        if (\$uri = /index.php) {
            set \$suffix ?\$query_string;
        }
 
        proxy_http_version 1.1;
        proxy_set_header Host \$http_host;
        proxy_set_header Scheme \$scheme;
        proxy_set_header SERVER_PORT \$server_port;
        proxy_set_header REMOTE_ADDR \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header Upgrade \$http_upgrade2;
        proxy_set_header Connection \$connection_upgrade;

        proxy_pass https://${octane_proxy};
    }
EOF
fi

cat <<'EOF' >> "$filename.conf"

    client_max_body_size 10M;

}
EOF

read -p $'\033[36m ‚úÖ  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª '$filename.conf' –±—ã–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω. –ü—Ä–∏–º–µ–Ω–∏—Ç—å –µ–≥–æ? (y/n): ' -n 1 -r
echo

if [[ $REPLY =~ ^[Yy]$ ]]; then

   # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –≤ –ø–∞–ø–∫—É /etc/nginx/conf.d/
   sudo cp "$filename.conf" "/etc/nginx/conf.d/"

   # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx
   if ! sudo nginx -t; then
      echo -e "\033[31m –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞. \033[0m"
      exit 1
   fi

   echo -e "\033[36m –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ /etc/nginx/cond.f/  \033[0m"

   echo -e "\033[36m –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ nginx –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π ... \033[0m"
   sudo systemctl reload nginx

   echo -e "\033[36m ‚úÖ  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–æ–º–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞. \033[0m"

   read -p $'\033[36m  –í—ã–ø—É—Å—Ç–∏—Ç—å LetsEncrypt —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è –ø—Ä–æ–∫—Å–∏-–¥–æ–º–µ–Ω–∞? (y/n): ' -n 1 -r
   echo

   if [[ $REPLY =~ ^[Yy]$ ]]; then
      if sudo certbot --nginx -d $server_name; then
         echo -e "\033[36m ‚úÖ  –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω  \033[0m"
         exit 0
      else
         echo -e "\033[31m –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞  \033[0m"
        exit 1
      fi
   fi
fi